# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (C) 2006 International Business Machines and others.
# All Rights Reserved.
# This file is distributed under the Eclipse Public License.
#
# Author:  Andreas Waechter           IBM    2006-04-13



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@COIN_HAS_ABC_TRUE@am__append_1 = \
@COIN_HAS_ABC_TRUE@	AbcCommon.hpp \
@COIN_HAS_ABC_TRUE@	AbcDualRowDantzig.cpp AbcDualRowDantzig.hpp \
@COIN_HAS_ABC_TRUE@	AbcDualRowPivot.cpp AbcDualRowPivot.hpp \
@COIN_HAS_ABC_TRUE@	AbcDualRowSteepest.cpp AbcDualRowSteepest.hpp \
@COIN_HAS_ABC_TRUE@	AbcMatrix.cpp AbcMatrix.hpp \
@COIN_HAS_ABC_TRUE@	AbcNonLinearCost.cpp AbcNonLinearCost.hpp \
@COIN_HAS_ABC_TRUE@	AbcPrimalColumnDantzig.cpp AbcPrimalColumnDantzig.hpp \
@COIN_HAS_ABC_TRUE@	AbcPrimalColumnPivot.cpp AbcPrimalColumnPivot.hpp \
@COIN_HAS_ABC_TRUE@	AbcPrimalColumnSteepest.cpp AbcPrimalColumnSteepest.hpp \
@COIN_HAS_ABC_TRUE@	AbcSimplex.cpp AbcSimplex.hpp \
@COIN_HAS_ABC_TRUE@	AbcSimplexDual.cpp AbcSimplexDual.hpp \
@COIN_HAS_ABC_TRUE@	AbcSimplexPrimal.cpp AbcSimplexPrimal.hpp \
@COIN_HAS_ABC_TRUE@	AbcSimplexParallel.cpp \
@COIN_HAS_ABC_TRUE@	AbcSimplexFactorization.cpp AbcSimplexFactorization.hpp \
@COIN_HAS_ABC_TRUE@	AbcWarmStart.cpp AbcWarmStart.hpp \
@COIN_HAS_ABC_TRUE@	CoinAbcBaseFactorization.hpp \
@COIN_HAS_ABC_TRUE@	CoinAbcBaseFactorization1.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcBaseFactorization2.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcBaseFactorization3.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcBaseFactorization4.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcBaseFactorization5.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcCommonFactorization.hpp \
@COIN_HAS_ABC_TRUE@	CoinAbcCommon.hpp \
@COIN_HAS_ABC_TRUE@	CoinAbcDenseFactorization.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcDenseFactorization.hpp \
@COIN_HAS_ABC_TRUE@	CoinAbcFactorization.hpp \
@COIN_HAS_ABC_TRUE@	CoinAbcFactorization1.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcFactorization2.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcFactorization3.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcFactorization4.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcFactorization5.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcHelperFunctions.cpp CoinAbcHelperFunctions.hpp \
@COIN_HAS_ABC_TRUE@	CoinAbcOrderedFactorization1.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcOrderedFactorization2.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcOrderedFactorization3.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcOrderedFactorization4.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcOrderedFactorization5.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcSmallFactorization1.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcSmallFactorization2.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcSmallFactorization3.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcSmallFactorization4.cpp \
@COIN_HAS_ABC_TRUE@	CoinAbcSmallFactorization5.cpp


# if AMD or CHOLMOD is available, then compile ClpCholeskyUfl.cpp
@COIN_HAS_AMD_TRUE@am__append_2 = ClpCholeskyUfl.cpp ClpCholeskyUfl.hpp
@COIN_HAS_AMD_FALSE@@COIN_HAS_CHOLMOD_TRUE@am__append_3 = ClpCholeskyUfl.cpp ClpCholeskyUfl.hpp
@COIN_HAS_MUMPS_TRUE@am__append_4 = ClpCholeskyMumps.cpp ClpCholeskyMumps.hpp
@COIN_HAS_WSMP_TRUE@am__append_5 = ClpCholeskyWssmp.cpp ClpCholeskyWssmp.hpp ClpCholeskyWssmpKKT.cpp ClpCholeskyWssmpKKT.hpp
bin_PROGRAMS = clp$(EXEEXT)
@COIN_HAS_ABC_TRUE@am__append_6 = AbcSimplex.hpp CoinAbcCommon.hpp AbcCommon.hpp AbcNonLinearCost.hpp

# if AMD or CHOLMOD is available, then install ClpCholeskyUfl.hpp (for advanced users)
@COIN_HAS_AMD_TRUE@am__append_7 = ClpCholeskyUfl.hpp
@COIN_HAS_AMD_FALSE@@COIN_HAS_CHOLMOD_TRUE@am__append_8 = ClpCholeskyUfl.hpp
@COIN_HAS_MUMPS_TRUE@am__append_9 = ClpCholeskyMumps.hpp
@COIN_HAS_WSMP_TRUE@am__append_10 = ClpCholeskyWssmp.hpp ClpCholeskyWssmpKKT.hpp
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_clp_aboca.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__includecoin_HEADERS_DIST)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h config_clp.h \
	$(top_builddir)/src/OsiClp/config_osiclp.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(includecoindir)"
PROGRAMS = $(bin_PROGRAMS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libClp_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
@COIN_HAS_ABC_TRUE@am__objects_1 = AbcDualRowDantzig.lo \
@COIN_HAS_ABC_TRUE@	AbcDualRowPivot.lo AbcDualRowSteepest.lo \
@COIN_HAS_ABC_TRUE@	AbcMatrix.lo AbcNonLinearCost.lo \
@COIN_HAS_ABC_TRUE@	AbcPrimalColumnDantzig.lo \
@COIN_HAS_ABC_TRUE@	AbcPrimalColumnPivot.lo \
@COIN_HAS_ABC_TRUE@	AbcPrimalColumnSteepest.lo AbcSimplex.lo \
@COIN_HAS_ABC_TRUE@	AbcSimplexDual.lo AbcSimplexPrimal.lo \
@COIN_HAS_ABC_TRUE@	AbcSimplexParallel.lo \
@COIN_HAS_ABC_TRUE@	AbcSimplexFactorization.lo AbcWarmStart.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcBaseFactorization1.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcBaseFactorization2.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcBaseFactorization3.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcBaseFactorization4.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcBaseFactorization5.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcDenseFactorization.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcFactorization1.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcFactorization2.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcFactorization3.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcFactorization4.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcFactorization5.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcHelperFunctions.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcOrderedFactorization1.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcOrderedFactorization2.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcOrderedFactorization3.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcOrderedFactorization4.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcOrderedFactorization5.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcSmallFactorization1.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcSmallFactorization2.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcSmallFactorization3.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcSmallFactorization4.lo \
@COIN_HAS_ABC_TRUE@	CoinAbcSmallFactorization5.lo
@COIN_HAS_AMD_TRUE@am__objects_2 = ClpCholeskyUfl.lo
@COIN_HAS_AMD_FALSE@@COIN_HAS_CHOLMOD_TRUE@am__objects_3 =  \
@COIN_HAS_AMD_FALSE@@COIN_HAS_CHOLMOD_TRUE@	ClpCholeskyUfl.lo
@COIN_HAS_MUMPS_TRUE@am__objects_4 = ClpCholeskyMumps.lo
@COIN_HAS_WSMP_TRUE@am__objects_5 = ClpCholeskyWssmp.lo \
@COIN_HAS_WSMP_TRUE@	ClpCholeskyWssmpKKT.lo
am_libClp_la_OBJECTS = ClpCholeskyBase.lo ClpCholeskyDense.lo \
	ClpConstraint.lo ClpConstraintLinear.lo \
	ClpConstraintQuadratic.lo Clp_C_Interface.lo \
	ClpDualRowDantzig.lo ClpDualRowPivot.lo ClpDualRowSteepest.lo \
	ClpDummyMatrix.lo ClpDynamicExampleMatrix.lo \
	ClpDynamicMatrix.lo ClpEventHandler.lo ClpFactorization.lo \
	ClpGubDynamicMatrix.lo ClpGubMatrix.lo ClpHelperFunctions.lo \
	ClpInterior.lo ClpLinearObjective.lo ClpMatrixBase.lo \
	ClpMessage.lo ClpModel.lo ClpNetworkBasis.lo \
	ClpNetworkMatrix.lo ClpNonLinearCost.lo ClpNode.lo \
	ClpObjective.lo ClpPackedMatrix.lo ClpParamUtils.lo \
	ClpParam.lo CbcOrClpParam.lo ClpParameters.lo \
	ClpPlusMinusOneMatrix.lo ClpPredictorCorrector.lo ClpPdco.lo \
	ClpPdcoBase.lo ClpLsqr.lo ClpPresolve.lo \
	ClpPrimalColumnDantzig.lo ClpPrimalColumnPivot.lo \
	ClpPrimalColumnSteepest.lo ClpQuadraticObjective.lo \
	ClpSimplex.lo ClpSimplexDual.lo ClpSimplexNonlinear.lo \
	ClpSimplexOther.lo ClpSimplexPrimal.lo ClpSolve.lo Idiot.lo \
	IdiSolve.lo ClpCholeskyPardiso.lo ClpPESimplex.lo \
	ClpPEPrimalColumnDantzig.lo ClpPEPrimalColumnSteepest.lo \
	ClpPEDualRowDantzig.lo ClpPEDualRowSteepest.lo ClpSolver.lo \
	MyEventHandler.lo MyMessageHandler.lo unitTest.lo \
	$(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5)
libClp_la_OBJECTS = $(am_libClp_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_clp_OBJECTS = ClpMain.$(OBJEXT)
clp_OBJECTS = $(am_clp_OBJECTS)
clp_DEPENDENCIES = libClp.la $(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src/OsiClp
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/AbcDualRowDantzig.Plo \
	./$(DEPDIR)/AbcDualRowPivot.Plo \
	./$(DEPDIR)/AbcDualRowSteepest.Plo ./$(DEPDIR)/AbcMatrix.Plo \
	./$(DEPDIR)/AbcNonLinearCost.Plo \
	./$(DEPDIR)/AbcPrimalColumnDantzig.Plo \
	./$(DEPDIR)/AbcPrimalColumnPivot.Plo \
	./$(DEPDIR)/AbcPrimalColumnSteepest.Plo \
	./$(DEPDIR)/AbcSimplex.Plo ./$(DEPDIR)/AbcSimplexDual.Plo \
	./$(DEPDIR)/AbcSimplexFactorization.Plo \
	./$(DEPDIR)/AbcSimplexParallel.Plo \
	./$(DEPDIR)/AbcSimplexPrimal.Plo ./$(DEPDIR)/AbcWarmStart.Plo \
	./$(DEPDIR)/CbcOrClpParam.Plo ./$(DEPDIR)/ClpCholeskyBase.Plo \
	./$(DEPDIR)/ClpCholeskyDense.Plo \
	./$(DEPDIR)/ClpCholeskyMumps.Plo \
	./$(DEPDIR)/ClpCholeskyPardiso.Plo \
	./$(DEPDIR)/ClpCholeskyUfl.Plo \
	./$(DEPDIR)/ClpCholeskyWssmp.Plo \
	./$(DEPDIR)/ClpCholeskyWssmpKKT.Plo \
	./$(DEPDIR)/ClpConstraint.Plo \
	./$(DEPDIR)/ClpConstraintLinear.Plo \
	./$(DEPDIR)/ClpConstraintQuadratic.Plo \
	./$(DEPDIR)/ClpDualRowDantzig.Plo \
	./$(DEPDIR)/ClpDualRowPivot.Plo \
	./$(DEPDIR)/ClpDualRowSteepest.Plo \
	./$(DEPDIR)/ClpDummyMatrix.Plo \
	./$(DEPDIR)/ClpDynamicExampleMatrix.Plo \
	./$(DEPDIR)/ClpDynamicMatrix.Plo \
	./$(DEPDIR)/ClpEventHandler.Plo \
	./$(DEPDIR)/ClpFactorization.Plo \
	./$(DEPDIR)/ClpGubDynamicMatrix.Plo \
	./$(DEPDIR)/ClpGubMatrix.Plo \
	./$(DEPDIR)/ClpHelperFunctions.Plo ./$(DEPDIR)/ClpInterior.Plo \
	./$(DEPDIR)/ClpLinearObjective.Plo ./$(DEPDIR)/ClpLsqr.Plo \
	./$(DEPDIR)/ClpMain.Po ./$(DEPDIR)/ClpMatrixBase.Plo \
	./$(DEPDIR)/ClpMessage.Plo ./$(DEPDIR)/ClpModel.Plo \
	./$(DEPDIR)/ClpNetworkBasis.Plo \
	./$(DEPDIR)/ClpNetworkMatrix.Plo ./$(DEPDIR)/ClpNode.Plo \
	./$(DEPDIR)/ClpNonLinearCost.Plo ./$(DEPDIR)/ClpObjective.Plo \
	./$(DEPDIR)/ClpPEDualRowDantzig.Plo \
	./$(DEPDIR)/ClpPEDualRowSteepest.Plo \
	./$(DEPDIR)/ClpPEPrimalColumnDantzig.Plo \
	./$(DEPDIR)/ClpPEPrimalColumnSteepest.Plo \
	./$(DEPDIR)/ClpPESimplex.Plo ./$(DEPDIR)/ClpPackedMatrix.Plo \
	./$(DEPDIR)/ClpParam.Plo ./$(DEPDIR)/ClpParamUtils.Plo \
	./$(DEPDIR)/ClpParameters.Plo ./$(DEPDIR)/ClpPdco.Plo \
	./$(DEPDIR)/ClpPdcoBase.Plo \
	./$(DEPDIR)/ClpPlusMinusOneMatrix.Plo \
	./$(DEPDIR)/ClpPredictorCorrector.Plo \
	./$(DEPDIR)/ClpPresolve.Plo \
	./$(DEPDIR)/ClpPrimalColumnDantzig.Plo \
	./$(DEPDIR)/ClpPrimalColumnPivot.Plo \
	./$(DEPDIR)/ClpPrimalColumnSteepest.Plo \
	./$(DEPDIR)/ClpQuadraticObjective.Plo \
	./$(DEPDIR)/ClpSimplex.Plo ./$(DEPDIR)/ClpSimplexDual.Plo \
	./$(DEPDIR)/ClpSimplexNonlinear.Plo \
	./$(DEPDIR)/ClpSimplexOther.Plo \
	./$(DEPDIR)/ClpSimplexPrimal.Plo ./$(DEPDIR)/ClpSolve.Plo \
	./$(DEPDIR)/ClpSolver.Plo ./$(DEPDIR)/Clp_C_Interface.Plo \
	./$(DEPDIR)/CoinAbcBaseFactorization1.Plo \
	./$(DEPDIR)/CoinAbcBaseFactorization2.Plo \
	./$(DEPDIR)/CoinAbcBaseFactorization3.Plo \
	./$(DEPDIR)/CoinAbcBaseFactorization4.Plo \
	./$(DEPDIR)/CoinAbcBaseFactorization5.Plo \
	./$(DEPDIR)/CoinAbcDenseFactorization.Plo \
	./$(DEPDIR)/CoinAbcFactorization1.Plo \
	./$(DEPDIR)/CoinAbcFactorization2.Plo \
	./$(DEPDIR)/CoinAbcFactorization3.Plo \
	./$(DEPDIR)/CoinAbcFactorization4.Plo \
	./$(DEPDIR)/CoinAbcFactorization5.Plo \
	./$(DEPDIR)/CoinAbcHelperFunctions.Plo \
	./$(DEPDIR)/CoinAbcOrderedFactorization1.Plo \
	./$(DEPDIR)/CoinAbcOrderedFactorization2.Plo \
	./$(DEPDIR)/CoinAbcOrderedFactorization3.Plo \
	./$(DEPDIR)/CoinAbcOrderedFactorization4.Plo \
	./$(DEPDIR)/CoinAbcOrderedFactorization5.Plo \
	./$(DEPDIR)/CoinAbcSmallFactorization1.Plo \
	./$(DEPDIR)/CoinAbcSmallFactorization2.Plo \
	./$(DEPDIR)/CoinAbcSmallFactorization3.Plo \
	./$(DEPDIR)/CoinAbcSmallFactorization4.Plo \
	./$(DEPDIR)/CoinAbcSmallFactorization5.Plo \
	./$(DEPDIR)/IdiSolve.Plo ./$(DEPDIR)/Idiot.Plo \
	./$(DEPDIR)/MyEventHandler.Plo \
	./$(DEPDIR)/MyMessageHandler.Plo ./$(DEPDIR)/unitTest.Plo
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libClp_la_SOURCES) $(clp_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__includecoin_HEADERS_DIST = Clp_C_Interface.h ClpCholeskyBase.hpp \
	ClpCholeskyDense.hpp ClpConstraint.hpp ClpConstraintLinear.hpp \
	ClpConstraintQuadratic.hpp ClpDualRowDantzig.hpp \
	ClpDualRowPivot.hpp ClpDualRowSteepest.hpp ClpDummyMatrix.hpp \
	ClpDynamicExampleMatrix.hpp ClpDynamicMatrix.hpp \
	ClpEventHandler.hpp ClpFactorization.hpp \
	ClpGubDynamicMatrix.hpp ClpGubMatrix.hpp ClpInterior.hpp \
	ClpLinearObjective.hpp ClpMatrixBase.hpp ClpMessage.hpp \
	ClpModel.hpp ClpModelParameters.hpp ClpNetworkMatrix.hpp \
	ClpNonLinearCost.hpp ClpNode.hpp ClpObjective.hpp \
	ClpPackedMatrix.hpp ClpParamUtils.hpp ClpPdcoBase.hpp \
	ClpPlusMinusOneMatrix.hpp ClpParameters.hpp ClpPresolve.hpp \
	ClpPrimalColumnDantzig.hpp ClpPrimalColumnPivot.hpp \
	ClpPrimalColumnSteepest.hpp ClpQuadraticObjective.hpp \
	ClpSimplex.hpp ClpSimplexNonlinear.hpp ClpSimplexOther.hpp \
	ClpSimplexDual.hpp ClpSimplexPrimal.hpp ClpSolve.hpp \
	ClpParam.hpp Idiot.hpp ClpCholeskyPardiso.hpp ClpPESimplex.hpp \
	ClpPEPrimalColumnDantzig.hpp ClpPEPrimalColumnSteepest.hpp \
	ClpPEDualRowDantzig.hpp ClpPEDualRowSteepest.hpp \
	CbcOrClpParam.hpp CbcOrClpParam.cpp AbcSimplex.hpp \
	CoinAbcCommon.hpp AbcCommon.hpp AbcNonLinearCost.hpp \
	ClpCholeskyUfl.hpp ClpCholeskyMumps.hpp ClpCholeskyWssmp.hpp \
	ClpCholeskyWssmpKKT.hpp ClpParam.cpp
HEADERS = $(includecoin_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP) \
	config.h.in config_clp.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
pkgdatadir = $(datadir)/$(PACKAGE_TARNAME)
pkgincludedir = $(includedir)/coin-or
ACLOCAL = @ACLOCAL@
ADD_CFLAGS = @ADD_CFLAGS@
ADD_CXXFLAGS = @ADD_CXXFLAGS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLPLIB_CFLAGS = @CLPLIB_CFLAGS@
CLPLIB_CFLAGS_NOPC = @CLPLIB_CFLAGS_NOPC@
CLPLIB_LFLAGS = @CLPLIB_LFLAGS@
CLPLIB_LFLAGS_NOPC = @CLPLIB_LFLAGS_NOPC@
CLPLIB_PCFILES = @CLPLIB_PCFILES@
COIN_PKG_CONFIG_PATH = @COIN_PKG_CONFIG_PATH@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETAGS = @ETAGS@
EXAMPLE_CLEAN_FILES = @EXAMPLE_CLEAN_FILES@
EXAMPLE_DIST_FILES = @EXAMPLE_DIST_FILES@
EXAMPLE_UNCOMP_FILES = @EXAMPLE_UNCOMP_FILES@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FILECMD = @FILECMD@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_LDFLAGS = @LT_LDFLAGS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NETLIB_DATA = @NETLIB_DATA@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OSICLPLIB_CFLAGS = @OSICLPLIB_CFLAGS@
OSICLPLIB_CFLAGS_NOPC = @OSICLPLIB_CFLAGS_NOPC@
OSICLPLIB_LFLAGS = @OSICLPLIB_LFLAGS@
OSICLPLIB_LFLAGS_NOPC = @OSICLPLIB_LFLAGS_NOPC@
OSICLPLIB_PCFILES = @OSICLPLIB_PCFILES@
OSICLPUNITTEST_CFLAGS = @OSICLPUNITTEST_CFLAGS@
OSICLPUNITTEST_CFLAGS_NOPC = @OSICLPUNITTEST_CFLAGS_NOPC@
OSICLPUNITTEST_LFLAGS = @OSICLPUNITTEST_LFLAGS@
OSICLPUNITTEST_LFLAGS_NOPC = @OSICLPUNITTEST_LFLAGS_NOPC@
OSICLPUNITTEST_PCFILES = @OSICLPUNITTEST_PCFILES@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
RPATH_FLAGS = @RPATH_FLAGS@
SAMPLE_DATA = @SAMPLE_DATA@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_PKG_CONFIG = @ac_ct_PKG_CONFIG@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
coin_doxy_logname = @coin_doxy_logname@
coin_doxy_tagfiles = @coin_doxy_tagfiles@
coin_doxy_tagname = @coin_doxy_tagname@
coin_doxy_usedot = @coin_doxy_usedot@
coin_have_doxygen = @coin_have_doxygen@
coin_have_latex = @coin_have_latex@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
pkgdocdir = $(docdir)
pkgconfiglibdir = $(libdir)/pkgconfig

# doxydocdir is the top-level directory for doxygen documentation. It holds
# the tag file and possibly the PDF or Postscript version. doxyhtmldir is
# typically a subdirectory containing all the files doxygen creates for
# html documentation.
doxydocdir = $(pkgdocdir)/doxydoc
doxyhtmldir = $(doxydocdir)/html
DocFiles = README README.md AUTHORS LICENSE
COIN_HAS_DOXYGEN = @COIN_HAS_DOXYGEN_TRUE@TRUE
COIN_HAS_LATEX = @COIN_HAS_LATEX_TRUE@TRUE
DOXYTAG_EDIT = sed -e 's|@baredocdir_nosub@|$(datarootdir)/doc|g'

########################################################################
#                               libClp                                 #
########################################################################

# Let the code know we're building the Clp libraries.

# Name of the library compiled in this directory.  We want it to be installed
# in the 'lib' directory
lib_LTLIBRARIES = libClp.la 

# List all source files for this library, including headers
libClp_la_SOURCES = ClpConfig.h ClpCholeskyBase.cpp \
	ClpCholeskyBase.hpp ClpCholeskyDense.cpp ClpCholeskyDense.hpp \
	ClpConstraint.cpp ClpConstraint.hpp ClpConstraintLinear.cpp \
	ClpConstraintLinear.hpp ClpConstraintQuadratic.cpp \
	ClpConstraintQuadratic.hpp Clp_C_Interface.cpp \
	Clp_C_Interface.h ClpDualRowDantzig.cpp ClpDualRowDantzig.hpp \
	ClpDualRowPivot.cpp ClpDualRowPivot.hpp ClpDualRowSteepest.cpp \
	ClpDualRowSteepest.hpp ClpDummyMatrix.cpp ClpDummyMatrix.hpp \
	ClpDynamicExampleMatrix.cpp ClpDynamicExampleMatrix.hpp \
	ClpDynamicMatrix.cpp ClpDynamicMatrix.hpp ClpEventHandler.cpp \
	ClpEventHandler.hpp ClpFactorization.cpp ClpFactorization.hpp \
	ClpGubDynamicMatrix.cpp ClpGubDynamicMatrix.hpp \
	ClpGubMatrix.cpp ClpGubMatrix.hpp ClpHelperFunctions.cpp \
	ClpHelperFunctions.hpp ClpInterior.cpp ClpInterior.hpp \
	ClpLinearObjective.cpp ClpLinearObjective.hpp \
	ClpMatrixBase.cpp ClpMatrixBase.hpp ClpMessage.cpp \
	ClpMessage.hpp ClpModel.cpp ClpModel.hpp ClpNetworkBasis.cpp \
	ClpNetworkBasis.hpp ClpNetworkMatrix.cpp ClpNetworkMatrix.hpp \
	ClpNonLinearCost.cpp ClpNonLinearCost.hpp ClpNode.cpp \
	ClpNode.hpp ClpObjective.cpp ClpObjective.hpp \
	ClpPackedMatrix.cpp ClpPackedMatrix.hpp ClpParamUtils.cpp \
	ClpParamUtils.hpp ClpParam.cpp ClpParam.hpp CbcOrClpParam.cpp \
	CbcOrClpParam.hpp ClpParameters.cpp ClpParameters.hpp \
	ClpModelParameters.hpp ClpPlusMinusOneMatrix.cpp \
	ClpPlusMinusOneMatrix.hpp ClpPredictorCorrector.cpp \
	ClpPredictorCorrector.hpp ClpPdco.cpp ClpPdco.hpp \
	ClpPdcoBase.cpp ClpPdcoBase.hpp ClpLsqr.cpp ClpLsqr.hpp \
	ClpPresolve.cpp ClpPresolve.hpp ClpPrimalColumnDantzig.cpp \
	ClpPrimalColumnDantzig.hpp ClpPrimalColumnPivot.cpp \
	ClpPrimalColumnPivot.hpp ClpPrimalColumnSteepest.cpp \
	ClpPrimalColumnSteepest.hpp ClpQuadraticObjective.cpp \
	ClpQuadraticObjective.hpp ClpSimplex.cpp ClpSimplex.hpp \
	ClpSimplexDual.cpp ClpSimplexDual.hpp ClpSimplexNonlinear.cpp \
	ClpSimplexNonlinear.hpp ClpSimplexOther.cpp \
	ClpSimplexOther.hpp ClpSimplexPrimal.cpp ClpSimplexPrimal.hpp \
	ClpSolve.cpp ClpSolve.hpp Idiot.cpp Idiot.hpp IdiSolve.cpp \
	ClpCholeskyPardiso.cpp ClpCholeskyPardiso.hpp ClpPESimplex.cpp \
	ClpPESimplex.hpp ClpPEPrimalColumnDantzig.cpp \
	ClpPEPrimalColumnDantzig.hpp ClpPEPrimalColumnSteepest.cpp \
	ClpPEPrimalColumnSteepest.hpp ClpPEDualRowDantzig.cpp \
	ClpPEDualRowDantzig.hpp ClpPEDualRowSteepest.cpp \
	ClpPEDualRowSteepest.hpp ClpSolver.cpp MyEventHandler.cpp \
	MyEventHandler.hpp MyMessageHandler.cpp MyMessageHandler.hpp \
	unitTest.cpp $(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_4) $(am__append_5)

# List all additionally required libraries
libClp_la_LIBADD = $(CLPLIB_LFLAGS)

# List all source files for this executable, including headers
clp_SOURCES = ClpMain.cpp 

# List all additionally required libraries
clp_LDADD = libClp.la $(CLPLIB_LFLAGS)

########################################################################
#                            Additional flags                          #
########################################################################
AM_CPPFLAGS = $(CLPLIB_CFLAGS)

# Use additional libtool flags
AM_LDFLAGS = $(LT_LDFLAGS)

########################################################################
#                Headers that need to be installed                     #
########################################################################

# Here list all the header files that are required by a user of the library,
# and that therefore should be installed in 'include/coin-or'
includecoindir = $(pkgincludedir)

# needed by Cbc
includecoin_HEADERS = Clp_C_Interface.h ClpCholeskyBase.hpp \
	ClpCholeskyDense.hpp ClpConstraint.hpp ClpConstraintLinear.hpp \
	ClpConstraintQuadratic.hpp ClpDualRowDantzig.hpp \
	ClpDualRowPivot.hpp ClpDualRowSteepest.hpp ClpDummyMatrix.hpp \
	ClpDynamicExampleMatrix.hpp ClpDynamicMatrix.hpp \
	ClpEventHandler.hpp ClpFactorization.hpp \
	ClpGubDynamicMatrix.hpp ClpGubMatrix.hpp ClpInterior.hpp \
	ClpLinearObjective.hpp ClpMatrixBase.hpp ClpMessage.hpp \
	ClpModel.hpp ClpModelParameters.hpp ClpNetworkMatrix.hpp \
	ClpNonLinearCost.hpp ClpNode.hpp ClpObjective.hpp \
	ClpPackedMatrix.hpp ClpParamUtils.hpp ClpPdcoBase.hpp \
	ClpPlusMinusOneMatrix.hpp ClpParameters.hpp ClpPresolve.hpp \
	ClpPrimalColumnDantzig.hpp ClpPrimalColumnPivot.hpp \
	ClpPrimalColumnSteepest.hpp ClpQuadraticObjective.hpp \
	ClpSimplex.hpp ClpSimplexNonlinear.hpp ClpSimplexOther.hpp \
	ClpSimplexDual.hpp ClpSimplexPrimal.hpp ClpSolve.hpp \
	ClpParam.hpp ClpParameters.hpp Idiot.hpp \
	ClpCholeskyPardiso.hpp ClpPESimplex.hpp \
	ClpPEPrimalColumnDantzig.hpp ClpPEPrimalColumnSteepest.hpp \
	ClpPEDualRowDantzig.hpp ClpPEDualRowSteepest.hpp \
	CbcOrClpParam.hpp CbcOrClpParam.cpp $(am__append_6) \
	$(am__append_7) $(am__append_8) $(am__append_9) \
	$(am__append_10) ClpParam.cpp
all: config.h config_clp.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/BuildTools/Makemain.inc $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/BuildTools/Makemain.inc $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

config_clp.h: stamp-h2
	@test -f $@ || rm -f stamp-h2
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h2

stamp-h2: $(srcdir)/config_clp.h.in $(top_builddir)/config.status
	@rm -f stamp-h2
	cd $(top_builddir) && $(SHELL) ./config.status src/config_clp.h

distclean-hdr:
	-rm -f config.h stamp-h1 config_clp.h stamp-h2
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libClp.la: $(libClp_la_OBJECTS) $(libClp_la_DEPENDENCIES) $(EXTRA_libClp_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(libClp_la_OBJECTS) $(libClp_la_LIBADD) $(LIBS)

clp$(EXEEXT): $(clp_OBJECTS) $(clp_DEPENDENCIES) $(EXTRA_clp_DEPENDENCIES) 
	@rm -f clp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(clp_OBJECTS) $(clp_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcDualRowDantzig.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcDualRowPivot.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcDualRowSteepest.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcMatrix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcNonLinearCost.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcPrimalColumnDantzig.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcPrimalColumnPivot.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcPrimalColumnSteepest.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcSimplex.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcSimplexDual.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcSimplexFactorization.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcSimplexParallel.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcSimplexPrimal.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbcWarmStart.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcOrClpParam.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpCholeskyBase.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpCholeskyDense.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpCholeskyMumps.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpCholeskyPardiso.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpCholeskyUfl.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpCholeskyWssmp.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpCholeskyWssmpKKT.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpConstraint.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpConstraintLinear.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpConstraintQuadratic.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpDualRowDantzig.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpDualRowPivot.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpDualRowSteepest.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpDummyMatrix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpDynamicExampleMatrix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpDynamicMatrix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpEventHandler.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpFactorization.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpGubDynamicMatrix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpGubMatrix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpHelperFunctions.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpInterior.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpLinearObjective.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpLsqr.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpMain.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpMatrixBase.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpMessage.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpModel.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpNetworkBasis.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpNetworkMatrix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpNode.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpNonLinearCost.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpObjective.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPEDualRowDantzig.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPEDualRowSteepest.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPEPrimalColumnDantzig.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPEPrimalColumnSteepest.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPESimplex.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPackedMatrix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpParam.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpParamUtils.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpParameters.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPdco.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPdcoBase.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPlusMinusOneMatrix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPredictorCorrector.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPresolve.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPrimalColumnDantzig.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPrimalColumnPivot.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpPrimalColumnSteepest.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpQuadraticObjective.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpSimplex.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpSimplexDual.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpSimplexNonlinear.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpSimplexOther.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpSimplexPrimal.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpSolve.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClpSolver.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Clp_C_Interface.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcBaseFactorization1.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcBaseFactorization2.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcBaseFactorization3.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcBaseFactorization4.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcBaseFactorization5.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcDenseFactorization.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcFactorization1.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcFactorization2.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcFactorization3.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcFactorization4.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcFactorization5.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcHelperFunctions.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcOrderedFactorization1.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcOrderedFactorization2.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcOrderedFactorization3.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcOrderedFactorization4.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcOrderedFactorization5.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcSmallFactorization1.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcSmallFactorization2.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcSmallFactorization3.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcSmallFactorization4.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAbcSmallFactorization5.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IdiSolve.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Idiot.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MyEventHandler.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MyMessageHandler.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unitTest.Plo@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includecoinHEADERS: $(includecoin_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(includecoin_HEADERS)'; test -n "$(includecoindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includecoindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includecoindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includecoindir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includecoindir)" || exit $$?; \
	done

uninstall-includecoinHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(includecoin_HEADERS)'; test -n "$(includecoindir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includecoindir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(HEADERS) config.h \
		config_clp.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includecoindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/AbcDualRowDantzig.Plo
	-rm -f ./$(DEPDIR)/AbcDualRowPivot.Plo
	-rm -f ./$(DEPDIR)/AbcDualRowSteepest.Plo
	-rm -f ./$(DEPDIR)/AbcMatrix.Plo
	-rm -f ./$(DEPDIR)/AbcNonLinearCost.Plo
	-rm -f ./$(DEPDIR)/AbcPrimalColumnDantzig.Plo
	-rm -f ./$(DEPDIR)/AbcPrimalColumnPivot.Plo
	-rm -f ./$(DEPDIR)/AbcPrimalColumnSteepest.Plo
	-rm -f ./$(DEPDIR)/AbcSimplex.Plo
	-rm -f ./$(DEPDIR)/AbcSimplexDual.Plo
	-rm -f ./$(DEPDIR)/AbcSimplexFactorization.Plo
	-rm -f ./$(DEPDIR)/AbcSimplexParallel.Plo
	-rm -f ./$(DEPDIR)/AbcSimplexPrimal.Plo
	-rm -f ./$(DEPDIR)/AbcWarmStart.Plo
	-rm -f ./$(DEPDIR)/CbcOrClpParam.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyBase.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyDense.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyMumps.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyPardiso.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyUfl.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyWssmp.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyWssmpKKT.Plo
	-rm -f ./$(DEPDIR)/ClpConstraint.Plo
	-rm -f ./$(DEPDIR)/ClpConstraintLinear.Plo
	-rm -f ./$(DEPDIR)/ClpConstraintQuadratic.Plo
	-rm -f ./$(DEPDIR)/ClpDualRowDantzig.Plo
	-rm -f ./$(DEPDIR)/ClpDualRowPivot.Plo
	-rm -f ./$(DEPDIR)/ClpDualRowSteepest.Plo
	-rm -f ./$(DEPDIR)/ClpDummyMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpDynamicExampleMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpDynamicMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpEventHandler.Plo
	-rm -f ./$(DEPDIR)/ClpFactorization.Plo
	-rm -f ./$(DEPDIR)/ClpGubDynamicMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpGubMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpHelperFunctions.Plo
	-rm -f ./$(DEPDIR)/ClpInterior.Plo
	-rm -f ./$(DEPDIR)/ClpLinearObjective.Plo
	-rm -f ./$(DEPDIR)/ClpLsqr.Plo
	-rm -f ./$(DEPDIR)/ClpMain.Po
	-rm -f ./$(DEPDIR)/ClpMatrixBase.Plo
	-rm -f ./$(DEPDIR)/ClpMessage.Plo
	-rm -f ./$(DEPDIR)/ClpModel.Plo
	-rm -f ./$(DEPDIR)/ClpNetworkBasis.Plo
	-rm -f ./$(DEPDIR)/ClpNetworkMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpNode.Plo
	-rm -f ./$(DEPDIR)/ClpNonLinearCost.Plo
	-rm -f ./$(DEPDIR)/ClpObjective.Plo
	-rm -f ./$(DEPDIR)/ClpPEDualRowDantzig.Plo
	-rm -f ./$(DEPDIR)/ClpPEDualRowSteepest.Plo
	-rm -f ./$(DEPDIR)/ClpPEPrimalColumnDantzig.Plo
	-rm -f ./$(DEPDIR)/ClpPEPrimalColumnSteepest.Plo
	-rm -f ./$(DEPDIR)/ClpPESimplex.Plo
	-rm -f ./$(DEPDIR)/ClpPackedMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpParam.Plo
	-rm -f ./$(DEPDIR)/ClpParamUtils.Plo
	-rm -f ./$(DEPDIR)/ClpParameters.Plo
	-rm -f ./$(DEPDIR)/ClpPdco.Plo
	-rm -f ./$(DEPDIR)/ClpPdcoBase.Plo
	-rm -f ./$(DEPDIR)/ClpPlusMinusOneMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpPredictorCorrector.Plo
	-rm -f ./$(DEPDIR)/ClpPresolve.Plo
	-rm -f ./$(DEPDIR)/ClpPrimalColumnDantzig.Plo
	-rm -f ./$(DEPDIR)/ClpPrimalColumnPivot.Plo
	-rm -f ./$(DEPDIR)/ClpPrimalColumnSteepest.Plo
	-rm -f ./$(DEPDIR)/ClpQuadraticObjective.Plo
	-rm -f ./$(DEPDIR)/ClpSimplex.Plo
	-rm -f ./$(DEPDIR)/ClpSimplexDual.Plo
	-rm -f ./$(DEPDIR)/ClpSimplexNonlinear.Plo
	-rm -f ./$(DEPDIR)/ClpSimplexOther.Plo
	-rm -f ./$(DEPDIR)/ClpSimplexPrimal.Plo
	-rm -f ./$(DEPDIR)/ClpSolve.Plo
	-rm -f ./$(DEPDIR)/ClpSolver.Plo
	-rm -f ./$(DEPDIR)/Clp_C_Interface.Plo
	-rm -f ./$(DEPDIR)/CoinAbcBaseFactorization1.Plo
	-rm -f ./$(DEPDIR)/CoinAbcBaseFactorization2.Plo
	-rm -f ./$(DEPDIR)/CoinAbcBaseFactorization3.Plo
	-rm -f ./$(DEPDIR)/CoinAbcBaseFactorization4.Plo
	-rm -f ./$(DEPDIR)/CoinAbcBaseFactorization5.Plo
	-rm -f ./$(DEPDIR)/CoinAbcDenseFactorization.Plo
	-rm -f ./$(DEPDIR)/CoinAbcFactorization1.Plo
	-rm -f ./$(DEPDIR)/CoinAbcFactorization2.Plo
	-rm -f ./$(DEPDIR)/CoinAbcFactorization3.Plo
	-rm -f ./$(DEPDIR)/CoinAbcFactorization4.Plo
	-rm -f ./$(DEPDIR)/CoinAbcFactorization5.Plo
	-rm -f ./$(DEPDIR)/CoinAbcHelperFunctions.Plo
	-rm -f ./$(DEPDIR)/CoinAbcOrderedFactorization1.Plo
	-rm -f ./$(DEPDIR)/CoinAbcOrderedFactorization2.Plo
	-rm -f ./$(DEPDIR)/CoinAbcOrderedFactorization3.Plo
	-rm -f ./$(DEPDIR)/CoinAbcOrderedFactorization4.Plo
	-rm -f ./$(DEPDIR)/CoinAbcOrderedFactorization5.Plo
	-rm -f ./$(DEPDIR)/CoinAbcSmallFactorization1.Plo
	-rm -f ./$(DEPDIR)/CoinAbcSmallFactorization2.Plo
	-rm -f ./$(DEPDIR)/CoinAbcSmallFactorization3.Plo
	-rm -f ./$(DEPDIR)/CoinAbcSmallFactorization4.Plo
	-rm -f ./$(DEPDIR)/CoinAbcSmallFactorization5.Plo
	-rm -f ./$(DEPDIR)/IdiSolve.Plo
	-rm -f ./$(DEPDIR)/Idiot.Plo
	-rm -f ./$(DEPDIR)/MyEventHandler.Plo
	-rm -f ./$(DEPDIR)/MyMessageHandler.Plo
	-rm -f ./$(DEPDIR)/unitTest.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includecoinHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-exec-local \
	install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/AbcDualRowDantzig.Plo
	-rm -f ./$(DEPDIR)/AbcDualRowPivot.Plo
	-rm -f ./$(DEPDIR)/AbcDualRowSteepest.Plo
	-rm -f ./$(DEPDIR)/AbcMatrix.Plo
	-rm -f ./$(DEPDIR)/AbcNonLinearCost.Plo
	-rm -f ./$(DEPDIR)/AbcPrimalColumnDantzig.Plo
	-rm -f ./$(DEPDIR)/AbcPrimalColumnPivot.Plo
	-rm -f ./$(DEPDIR)/AbcPrimalColumnSteepest.Plo
	-rm -f ./$(DEPDIR)/AbcSimplex.Plo
	-rm -f ./$(DEPDIR)/AbcSimplexDual.Plo
	-rm -f ./$(DEPDIR)/AbcSimplexFactorization.Plo
	-rm -f ./$(DEPDIR)/AbcSimplexParallel.Plo
	-rm -f ./$(DEPDIR)/AbcSimplexPrimal.Plo
	-rm -f ./$(DEPDIR)/AbcWarmStart.Plo
	-rm -f ./$(DEPDIR)/CbcOrClpParam.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyBase.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyDense.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyMumps.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyPardiso.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyUfl.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyWssmp.Plo
	-rm -f ./$(DEPDIR)/ClpCholeskyWssmpKKT.Plo
	-rm -f ./$(DEPDIR)/ClpConstraint.Plo
	-rm -f ./$(DEPDIR)/ClpConstraintLinear.Plo
	-rm -f ./$(DEPDIR)/ClpConstraintQuadratic.Plo
	-rm -f ./$(DEPDIR)/ClpDualRowDantzig.Plo
	-rm -f ./$(DEPDIR)/ClpDualRowPivot.Plo
	-rm -f ./$(DEPDIR)/ClpDualRowSteepest.Plo
	-rm -f ./$(DEPDIR)/ClpDummyMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpDynamicExampleMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpDynamicMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpEventHandler.Plo
	-rm -f ./$(DEPDIR)/ClpFactorization.Plo
	-rm -f ./$(DEPDIR)/ClpGubDynamicMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpGubMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpHelperFunctions.Plo
	-rm -f ./$(DEPDIR)/ClpInterior.Plo
	-rm -f ./$(DEPDIR)/ClpLinearObjective.Plo
	-rm -f ./$(DEPDIR)/ClpLsqr.Plo
	-rm -f ./$(DEPDIR)/ClpMain.Po
	-rm -f ./$(DEPDIR)/ClpMatrixBase.Plo
	-rm -f ./$(DEPDIR)/ClpMessage.Plo
	-rm -f ./$(DEPDIR)/ClpModel.Plo
	-rm -f ./$(DEPDIR)/ClpNetworkBasis.Plo
	-rm -f ./$(DEPDIR)/ClpNetworkMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpNode.Plo
	-rm -f ./$(DEPDIR)/ClpNonLinearCost.Plo
	-rm -f ./$(DEPDIR)/ClpObjective.Plo
	-rm -f ./$(DEPDIR)/ClpPEDualRowDantzig.Plo
	-rm -f ./$(DEPDIR)/ClpPEDualRowSteepest.Plo
	-rm -f ./$(DEPDIR)/ClpPEPrimalColumnDantzig.Plo
	-rm -f ./$(DEPDIR)/ClpPEPrimalColumnSteepest.Plo
	-rm -f ./$(DEPDIR)/ClpPESimplex.Plo
	-rm -f ./$(DEPDIR)/ClpPackedMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpParam.Plo
	-rm -f ./$(DEPDIR)/ClpParamUtils.Plo
	-rm -f ./$(DEPDIR)/ClpParameters.Plo
	-rm -f ./$(DEPDIR)/ClpPdco.Plo
	-rm -f ./$(DEPDIR)/ClpPdcoBase.Plo
	-rm -f ./$(DEPDIR)/ClpPlusMinusOneMatrix.Plo
	-rm -f ./$(DEPDIR)/ClpPredictorCorrector.Plo
	-rm -f ./$(DEPDIR)/ClpPresolve.Plo
	-rm -f ./$(DEPDIR)/ClpPrimalColumnDantzig.Plo
	-rm -f ./$(DEPDIR)/ClpPrimalColumnPivot.Plo
	-rm -f ./$(DEPDIR)/ClpPrimalColumnSteepest.Plo
	-rm -f ./$(DEPDIR)/ClpQuadraticObjective.Plo
	-rm -f ./$(DEPDIR)/ClpSimplex.Plo
	-rm -f ./$(DEPDIR)/ClpSimplexDual.Plo
	-rm -f ./$(DEPDIR)/ClpSimplexNonlinear.Plo
	-rm -f ./$(DEPDIR)/ClpSimplexOther.Plo
	-rm -f ./$(DEPDIR)/ClpSimplexPrimal.Plo
	-rm -f ./$(DEPDIR)/ClpSolve.Plo
	-rm -f ./$(DEPDIR)/ClpSolver.Plo
	-rm -f ./$(DEPDIR)/Clp_C_Interface.Plo
	-rm -f ./$(DEPDIR)/CoinAbcBaseFactorization1.Plo
	-rm -f ./$(DEPDIR)/CoinAbcBaseFactorization2.Plo
	-rm -f ./$(DEPDIR)/CoinAbcBaseFactorization3.Plo
	-rm -f ./$(DEPDIR)/CoinAbcBaseFactorization4.Plo
	-rm -f ./$(DEPDIR)/CoinAbcBaseFactorization5.Plo
	-rm -f ./$(DEPDIR)/CoinAbcDenseFactorization.Plo
	-rm -f ./$(DEPDIR)/CoinAbcFactorization1.Plo
	-rm -f ./$(DEPDIR)/CoinAbcFactorization2.Plo
	-rm -f ./$(DEPDIR)/CoinAbcFactorization3.Plo
	-rm -f ./$(DEPDIR)/CoinAbcFactorization4.Plo
	-rm -f ./$(DEPDIR)/CoinAbcFactorization5.Plo
	-rm -f ./$(DEPDIR)/CoinAbcHelperFunctions.Plo
	-rm -f ./$(DEPDIR)/CoinAbcOrderedFactorization1.Plo
	-rm -f ./$(DEPDIR)/CoinAbcOrderedFactorization2.Plo
	-rm -f ./$(DEPDIR)/CoinAbcOrderedFactorization3.Plo
	-rm -f ./$(DEPDIR)/CoinAbcOrderedFactorization4.Plo
	-rm -f ./$(DEPDIR)/CoinAbcOrderedFactorization5.Plo
	-rm -f ./$(DEPDIR)/CoinAbcSmallFactorization1.Plo
	-rm -f ./$(DEPDIR)/CoinAbcSmallFactorization2.Plo
	-rm -f ./$(DEPDIR)/CoinAbcSmallFactorization3.Plo
	-rm -f ./$(DEPDIR)/CoinAbcSmallFactorization4.Plo
	-rm -f ./$(DEPDIR)/CoinAbcSmallFactorization5.Plo
	-rm -f ./$(DEPDIR)/IdiSolve.Plo
	-rm -f ./$(DEPDIR)/Idiot.Plo
	-rm -f ./$(DEPDIR)/MyEventHandler.Plo
	-rm -f ./$(DEPDIR)/MyMessageHandler.Plo
	-rm -f ./$(DEPDIR)/unitTest.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includecoinHEADERS \
	uninstall-libLTLIBRARIES uninstall-local

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags dvi dvi-am html html-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-local install-html \
	install-html-am install-includecoinHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-includecoinHEADERS uninstall-libLTLIBRARIES \
	uninstall-local

.PRECIOUS: Makefile


doxygen-docs: 
	if test "$(COIN_HAS_DOXYGEN)" = TRUE; then \
	  if test -d "doxydoc/"; then \
	    if test -f doxydoc/doxygen.conf ; then \
	      $(DOXYTAG_EDIT) \
	        doxydoc/doxygen.conf > doxydoc/doxygen.conf.tmp ; \
	      mv doxydoc/doxygen.conf.tmp doxydoc/doxygen.conf ; \
	    fi ; \
	    doxygen doxydoc/doxygen.conf;\
	  fi;\
	fi

pdf-doxygen-docs: doxygen-docs
	if test "$(COIN_HAS_DOXYGEN)" = TRUE; then \
	  if test -d "doxydoc/latex"; then \
       	    if test "$(COIN_HAS_LATEX)" = TRUE; then \
	      cd doxydoc/latex;\
	      $(MAKE) pdf;\
	      cd -;\
	    fi;\
	  fi;\
	fi

clean-doxygen-docs:
	if test -d "doxydoc"; then \
	  cd doxydoc ;\
	  rm -rf html latex *.log *.tag;\
	fi

install-doxygen-docs: doxygen-docs
	if test "$(COIN_HAS_DOXYGEN)" = TRUE; then \
	  if test -d "doxydoc"; then \
	    test -d "$(DESTDIR)$(doxydocdir)" || \
	         $(mkdir_p) "$(DESTDIR)$(doxydocdir)"; \
	    $(INSTALL_DATA) doxydoc/@coin_doxy_tagname@ \
	        "$(DESTDIR)$(doxydocdir)"; \
	    if test -f "doxydoc/latex/refman.pdf"; then \
	      $(INSTALL_DATA) doxydoc/latex/refman.pdf \
	          "$(DESTDIR)$(doxydocdir)";\
	    fi;\
	    if test -d "doxydoc/html"; then \
	      test -d "$(DESTDIR)$(doxyhtmldir)/search/" || \
	           $(mkdir_p) "$(DESTDIR)$(doxyhtmldir)/search/"; \
	      $(INSTALL_DATA) doxydoc/html/*.* \
	          "$(DESTDIR)$(doxyhtmldir)";\
	      $(INSTALL_DATA) doxydoc/html/search/*.* \
	          "$(DESTDIR)$(doxyhtmldir)/search";\
            fi;\
          fi;\
        fi

# It's not clear that uninstall-doc should also remove doxygen doc'n. Write
# the rules so that the last one will remove pkgdocdir (which should be empty
# by then).

uninstall-doxygen-docs:
	if test -d "$(DESTDIR)$(doxydocdir)"; then \
	  rm -rf "$(DESTDIR)$(doxydocdir)"; \
	fi
	rmdir $(DESTDIR)$(pkgdocdir) || true

install-doc:
	$(mkdir_p) "$(DESTDIR)$(pkgdocdir)"
	for file in $(DocFiles); do \
	  if test -f "$$file"; then dir=; else dir="$(srcdir)/"; fi; \
	  if test -f "$$dir$$file"; then \
	    $(INSTALL_DATA) "$$dir$$file" "$(DESTDIR)$(pkgdocdir)/$$file"; \
	  fi; \
	done

uninstall-doc:
	for file in $(DocFiles); do \
	  rm -f "$(DESTDIR)$(pkgdocdir)/$$file"; \
	done
	rmdir $(DESTDIR)$(pkgdocdir) || true

.PHONY: install-doc uninstall-doc \
	doxygen-docs pdf-doxygen-docs clean-doxygen-docs \
	install-doxygen-docs uninstall-doxygen-docs

#######################################################################
# Create the Config.h file that has all public defines and install it #
#######################################################################

install-exec-local:
	$(install_sh_DATA) config_clp.h $(DESTDIR)$(includecoindir)/ClpConfig.h

uninstall-local:
	rm -f $(DESTDIR)$(includecoindir)/ClpConfig.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
